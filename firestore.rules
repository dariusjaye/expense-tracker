rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    // Allow authenticated users to read and write their own data
    match /expenses/{expenseId} {
      // For individual document operations
      allow read: if request.auth != null && resource.data.userId == request.auth.uid;
      allow write: if request.auth != null && (
        // For updates and deletes
        (resource != null && resource.data.userId == request.auth.uid) ||
        // For creates
        (request.resource.data.userId == request.auth.uid)
      );
    }
    
    // Allow querying expenses collection with userId filter
    match /expenses {
      allow list: if request.auth != null && request.query.limit <= 1000 && 
                   request.query.filters[0].field_path == "userId" && 
                   request.query.filters[0].op == "==" && 
                   request.query.filters[0].value == request.auth.uid;
    }
    
    match /vendors/{vendorId} {
      // For individual document operations
      allow read: if request.auth != null && resource.data.userId == request.auth.uid;
      allow write: if request.auth != null && (
        // For updates and deletes
        (resource != null && resource.data.userId == request.auth.uid) ||
        // For creates
        (request.resource.data.userId == request.auth.uid)
      );
    }
    
    // Allow querying vendors collection with userId filter
    match /vendors {
      allow list: if request.auth != null && request.query.limit <= 1000 && 
                   request.query.filters[0].field_path == "userId" && 
                   request.query.filters[0].op == "==" && 
                   request.query.filters[0].value == request.auth.uid;
    }
    
    // Allow authenticated users to read and write to the test_connection collection
    match /test_connection/{docId} {
      allow read, write: if request.auth != null;
    }
    
    // Allow public access to the public_data collection
    match /public_data/{docId} {
      allow read, write: if true;
    }
    
    // Default deny all
    match /{document=**} {
      allow read, write: if false;
    }
  }
} 